receivers:
  filelog:
    include: [/var/lib/docker/containers/*/*.log]
    start_at: beginning
    poll_interval: 5s
    include_file_path: true
    include_file_name: true
    operators:
      - type: json_parser
        parse_from: body
        if: 'body matches "^\\{"'
      - type: regex_parser
        regex: '^(?P<message>.*)$'
        parse_from: body

  docker_stats:
    endpoint: "unix:///var/run/docker.sock"
    collection_interval: 10s

processors:
  resource:
    attributes:
      - key: host.name
        action: insert
        value: ${HOSTNAME}
      - key: service.name
        action: insert
        value: ${SERVICE_NAME}
      - key: deployment.environment
        action: insert
        value: ${SERVICE_ENV}

  transform/logs:
    log_statements:
      - context: log
        statements:
          - set(severity_number, 9)  # Default to INFO
          - set(severity_text, "INFO")
          - if:
              condition: 'contains(body, "error")'
              then:
                - set(severity_number, 13)
                - set(severity_text, "ERROR")

exporters:
  otlp:
    endpoint: 13.203.160.238:4317
    tls:
      insecure: true

service:
  pipelines:
    logs:
      receivers: [filelog]
      processors: [resource, transform/logs]
      exporters: [otlp]

    metrics:
      receivers: [docker_stats]
      processors: [resource]
      exporters: [otlp]

  telemetry:
    logs:
      level: "debug"

